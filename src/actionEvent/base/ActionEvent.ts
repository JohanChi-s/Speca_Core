/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumActionEventAction } from "./EnumActionEventAction";
import {
  IsEnum,
  IsString,
  IsOptional,
  ValidateNested,
  IsDate,
} from "class-validator";
import { Collection } from "../../collection/base/Collection";
import { Type } from "class-transformer";
import { Document } from "../../document/base/Document";

@ObjectType()
class ActionEvent {
  @ApiProperty({
    required: true,
    enum: EnumActionEventAction,
  })
  @IsEnum(EnumActionEventAction)
  @Field(() => EnumActionEventAction, {
    nullable: true,
  })
  action?:
    | "Download"
    | "Upload"
    | "Edit"
    | "Delete"
    | "AddRole"
    | "RemoveRole"
    | "Duplicate"
    | "Comment"
    | "Share"
    | "Assign"
    | "Star"
    | "Public"
    | "Private";

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  actor!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  assignee!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  assigner!: string | null;

  @ApiProperty({
    required: false,
    type: () => Collection,
  })
  @ValidateNested()
  @Type(() => Collection)
  @IsOptional()
  collection?: Collection | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Document,
  })
  @ValidateNested()
  @Type(() => Document)
  @IsOptional()
  document?: Document | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;
}

export { ActionEvent as ActionEvent };
