/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ActionEventUpdateManyWithoutDocumentsInput } from "./ActionEventUpdateManyWithoutDocumentsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsBoolean,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { ArchivedUpdateManyWithoutDocumentsInput } from "./ArchivedUpdateManyWithoutDocumentsInput";
import { DocumentUpdateManyWithoutDocumentsInput } from "./DocumentUpdateManyWithoutDocumentsInput";
import { CommentUpdateManyWithoutDocumentsInput } from "./CommentUpdateManyWithoutDocumentsInput";
import { MemberUpdateManyWithoutDocumentsInput } from "./MemberUpdateManyWithoutDocumentsInput";

@InputType()
class DocumentUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ActionEventUpdateManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => ActionEventUpdateManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => ActionEventUpdateManyWithoutDocumentsInput, {
    nullable: true,
  })
  actionEvents?: ActionEventUpdateManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    type: () => ArchivedUpdateManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => ArchivedUpdateManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => ArchivedUpdateManyWithoutDocumentsInput, {
    nullable: true,
  })
  archiveds?: ArchivedUpdateManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  authorId?: string;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutDocumentsInput, {
    nullable: true,
  })
  childDocuments?: DocumentUpdateManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  collectionId?: string | null;

  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutDocumentsInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutDocumentsInput, {
    nullable: true,
  })
  documents?: DocumentUpdateManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  emoji?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isFullWidth?: boolean | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPublic?: boolean;

  @ApiProperty({
    required: false,
    type: () => MemberUpdateManyWithoutDocumentsInput,
  })
  @ValidateNested()
  @Type(() => MemberUpdateManyWithoutDocumentsInput)
  @IsOptional()
  @Field(() => MemberUpdateManyWithoutDocumentsInput, {
    nullable: true,
  })
  members?: MemberUpdateManyWithoutDocumentsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  revision?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  templateId?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  text?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string;
}

export { DocumentUpdateInput as DocumentUpdateInput };
